name: caddy

on:
  workflow_dispatch:
    inputs:
      force:
        description: 'Force build even if version exists'
        required: false
        type: boolean
        default: false
  schedule:
    - cron: '0 0 * * 1'

permissions:
  contents: write
  
env:
  IMAGE_NAME: tgdrive/caddy

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check version and build status
        id: version
        run: |
          VERSION=$(curl -s "https://api.github.com/repos/caddyserver/caddy/releases/latest" | jq -r '.tag_name | .[1:]')
          
          ENCODED_TOKEN=$(echo -n "${{ secrets.GITHUB_TOKEN }}" | base64)

          TAGS=$(curl -s -H "Authorization: Bearer ${ENCODED_TOKEN}" https://ghcr.io/v2/${{ env.IMAGE_NAME }}/tags/list)

          EXISTS=$(echo "$TAGS" | jq --arg TAG "$VERSION" '
            .tags |                                      
            if type == "array" then                      
              any(. == $TAG)                             
            else
              false
            end
          ')
          if [ "$EXISTS" = "false"  ] || [ "${{ inputs.force }}" = "true" ]; then
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "build=true" >> $GITHUB_OUTPUT
          else
            echo "Version $VERSION already exists, skipping build"
            echo "build=false" >> $GITHUB_OUTPUT
          fi

      - uses: docker/login-action@v3
        if: steps.version.outputs.build == 'true'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v3
        if: steps.version.outputs.build == 'true'

      - uses: docker/build-push-action@v6
        if: steps.version.outputs.build == 'true'
        with:
          context: ./caddy
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          labels: |
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.description=Caddy Extended Image
